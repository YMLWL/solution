---
// Component imports and setup
---

<div class="max-w-sm mx-auto bg-gray-800 p-4 min-h-screen">
  <div class="bg-white rounded-3xl p-6 space-y-6">
    <!-- Status Bar -->
    <div class="flex justify-between items-center text-black font-medium">
      <span>9:41</span>
      <div class="flex items-center gap-1">
        <div class="flex gap-1">
          <div class="w-1 h-3 bg-black rounded-full"></div>
          <div class="w-1 h-3 bg-black rounded-full"></div>
          <div class="w-1 h-3 bg-black rounded-full"></div>
          <div class="w-1 h-3 bg-black rounded-full"></div>
        </div>
        <svg class="w-4 h-4 ml-1" viewBox="0 0 24 24" fill="currentColor">
          <path d="M3 7H21L19 9H5L3 7ZM21 9V17C21 18.1 20.1 19 19 19H5C3.9 19 3 18.1 3 17V9H21Z" />
        </svg>
        <div class="w-6 h-3 bg-black rounded-sm"></div>
      </div>
    </div>

    <!-- Search Bar -->
    <div class="flex items-center gap-3">
      <svg class="w-6 h-6 text-gray-600" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M19 12H5M5 12L12 19M5 12L12 5" />
      </svg>
      <input
        type="text"
        placeholder="Mau makan apa hari ini?"
        class="flex-1 border-2 border-gray-300 rounded-full px-4 py-3 text-gray-600 placeholder:text-gray-400 focus:outline-none focus:border-gray-400"
      />
    </div>

    <!-- Food Type Selection -->
    <div class="space-y-4">
      <h3 class="text-lg font-medium text-gray-800">Lagi pengen makan apa aja?</h3>
      <div class="flex flex-wrap gap-3">
        {["Manis", "Asin", "Pedas", "Gurih"].map((type) => (
          <button
            class="rounded-full px-6 py-2 border-2 border-gray-300 text-gray-600 bg-white hover:bg-gray-50"
            data-type={type}
          >
            {type}
          </button>
        ))}
      </div>
    </div>

    <!-- People Count -->
    <div class="space-y-4">
      <h3 class="text-lg font-medium text-gray-800">Jumlah orang</h3>
      <div class="flex flex-wrap gap-3">
        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, "Lebih dari 10"].map((count) => (
          <button
            class="rounded-full px-4 py-2 border-2 border-gray-300 text-gray-600 bg-white hover:bg-gray-50 min-w-[50px]"
            data-count={count}
          >
            {count}
          </button>
        ))}
      </div>
    </div>

    <!-- Budget Selection -->
    <div class="space-y-4">
      <h3 class="text-lg font-medium text-gray-800">Total budget kamu berapa?</h3>
      <div class="flex flex-wrap gap-3">
        {["<Rp50.000", "Rp100.000", "Rp250.000", "Rp500.000", ">Rp1.000.000", "Isi sendiri"].map((budget) => (
          <button
            class="rounded-full px-4 py-2 border-2 border-gray-300 text-gray-600 bg-white hover:bg-gray-50"
            data-budget={budget}
          >
            {budget}
          </button>
        ))}
      </div>
    </div>

    <!-- Submit Button -->
    <button class="w-full bg-green-600 hover:bg-green-700 text-white rounded-full py-4 text-lg font-medium">
      Lihat Rekomendasi
    </button>
  </div>
</div>

<script>
  // Client-side state management
  let selectedFoodType = "Manis";
  let selectedPeople = 6;
  let selectedBudget = "Rp100.000";

  // Add click handlers for food type buttons
  document.querySelectorAll('[data-type]').forEach(button => {
    button.addEventListener('click', (e) => {
      const target = e.target as HTMLButtonElement;
      selectedFoodType = target.dataset.type || "Manis";
      
      // Update UI
      document.querySelectorAll('[data-type]').forEach(btn => {
        btn.classList.remove('border-green-600', 'text-green-600');
        btn.classList.add('border-gray-300', 'text-gray-600');
      });
      target.classList.remove('border-gray-300', 'text-gray-600');
      target.classList.add('border-green-600', 'text-green-600');
    });
  });

  // Add click handlers for people count buttons
  document.querySelectorAll('[data-count]').forEach(button => {
    button.addEventListener('click', (e) => {
      const target = e.target as HTMLButtonElement;
      selectedPeople = parseInt(target.dataset.count || "6");
      
      // Update UI
      document.querySelectorAll('[data-count]').forEach(btn => {
        btn.classList.remove('border-green-600', 'text-green-600');
        btn.classList.add('border-gray-300', 'text-gray-600');
      });
      target.classList.remove('border-gray-300', 'text-gray-600');
      target.classList.add('border-green-600', 'text-green-600');
    });
  });

  // Add click handlers for budget buttons
  document.querySelectorAll('[data-budget]').forEach(button => {
    button.addEventListener('click', (e) => {
      const target = e.target as HTMLButtonElement;
      selectedBudget = target.dataset.budget || "Rp100.000";
      
      // Update UI
      document.querySelectorAll('[data-budget]').forEach(btn => {
        btn.classList.remove('border-green-600', 'text-green-600');
        btn.classList.add('border-gray-300', 'text-gray-600');
      });
      target.classList.remove('border-gray-300', 'text-gray-600');
      target.classList.add('border-green-600', 'text-green-600');
    });
  });
</script>
